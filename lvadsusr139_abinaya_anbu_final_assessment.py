# -*- coding: utf-8 -*-
"""LVADSUSR139_Abinaya_Anbu_Final_Assessment.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1CE4Zj3SvFIcgQ0ms-XYLshdJqkK8cDuI

**Final Assessment Lab**
"""

import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns
import numpy as np

#fea3aa 	 f8b88b 	 faf884
# baed91 	 b2cefe 	 f2a2e8

"""**QUESTION1**"""

#load data
df=pd.read_csv('/content/sample_data/Final Dataset - IPL.csv')
#df.head()
#describe data
df.describe()
#info
df.info()
#no of rows and columns -shape
df.shape#(74-rows,20-columns)

#numerical data
numerical_data=df.select_dtypes(include=['int','float']).columns
print(numerical_data.nunique())# count of numerical data is 7 ,so count of categorical is 13
#print(20-7)

df.isnull().sum()# no column has an null value

"""**QUESTION2**"""

#handling missing values
df.dropna(inplace=True)
df.shape# shape not changed due to no null values, as no ,missing vales not handled

#handling duplicates
df.duplicated().sum()# zero duplicates
df.drop_duplicates(inplace=True)
#checking for change in shape
df.shape#does not changes due to no duplicates, no duplicated not handled

"""**QUESTION3**"""

#descriptive statistics
#mean=numerical_data.mean()
print(numerical_data)
#range=numerical_data.max()-numerical_data.min()
#var=numerical_data.var()
#std=numerical_data.std()

range_match_id= df['match_id'].max()-df['match_id'].min()
var_match_id=df['match_id'].var()
std_match_id=df['match_id'].std()
range_match_id= df['first_ings_score'].max()-df['first_ings_score'].min()
var_match_id=df['first_ings_score'].var()
std_match_id=df['first_ings_score'].std()
range_match_id= df['first_ings_wkts'].max()-df['first_ings_wkts'].min()
var_match_id=df['first_ings_wkts'].var()
std_match_id=df['first_ings_wkts'].std()


range_match_id= df['second_ings_score'].max()-df['second_ings_score'].min()
var_match_id=df['second_ings_score'].var()
std_match_id=df['second_ings_score'].std()
range_match_id= df['second_ings_wkts'].max()-df['second_ings_wkts'].min()
var_match_id=df['second_ings_wkts'].var()
std_match_id=df['second_ings_wkts'].std()
range_match_id= df['highscore'].max()-df['highscore'].min()
var_match_id=df['highscore'].var()
std_match_id=df['highscore'].std()


#range=numerical_data.max()-numerical_data.min()
#var=numerical_data.var()
#std=numerical_data.std()

#range=numerical_data.max()-numerical_data.min()
#var=numerical_data.var()
#std=numerical_data.std()

#range=numerical_data.max()-numerical_data.min()
#var=numerical_data.var()
#std=numerical_data.std()

#range=numerical_data.max()-numerical_data.min()
#var=numerical_data.var()
#std=numerical_data.std()


df.describe()# from this we got count,mean,std,min,qutilers(25%,50%,75%)

"""**QUESTION4**"""

df.columns
import datetime
#data=df.groupby('venue','team1')['match_id'].count().reset_index()
#sns.scatterplot(x='venue',y='team1',data=df,color='f2a2e8')
plt.xticks(rotation=90)
sns.lineplot(x='venue',y='match_id',data=df)

sns.barplot(x='venue',y='margin',data=df)
plt.xticks(rotation=90)#pune statidum has the hights margin

"""**QUESTION5**"""

#correl
data=df.groupby('team1').aggregate({'match_id':'count'})
print(data)
sns.barplot(x='team1',y='match_id',data=data)
sns.histplot(x=df['margin'])

sns.pairplot(df)# pair plot is usee to fin all the corrrelation between mutple values in the data is used that to fin the relationship between all data

"""**QUESTION6**"""

#outliers
df.describe()
sns.pairplot(df)

sns.boxplot(data=df)
plt.xticks(rotation=90)

"""there are ouliers in first_ings_score,second_inng_score,marign and high score, margin has highest amount of outliers , usually bost plot is used for deticting outlietrs"""

from sklearn import stats
z_score=stats.z_score(df)
outlier=df[z_score>=3]

"""**QUESTION7**"""

#venue vs performance
win_wickets=df[df['won_by']=='Wickets']
venue_w=win_wickets['venue'].unique()
teams_w=win_wickets['team1'].unique()
df['count_wickets']=win_wickets.groupby(['venue','team1'])['won_by'].value_counts().reset_index()
#data=pd.DataFrame('venue','teams','count')
print(count_wickets)
win_Runs=df[df['won_by']=='Runs']
venue_r=win_wickets['venue'].unique()
teams_r=win_wickets['team1'].unique()
df['count_runs']=win_wickets.groupby(['venue','team1'])['won_by'].value_counts().reset_index()
#data=pd.DataFrame('venue','teams','count')
print(count_runs)

sns.lineplot(x='venue',y='team1',data=win_wickets)
sns.lineplot(x='venue',y='team1',data=win_Runs)

"""**QUESTION8**"""

#player performnace
players= df['player_of_the_match']
count=df.groupby('player_of_the_match')['match_id'].count().reset_index().sort_values(by='match_id',ascending=False)
print(count.head(10))
count.plot(x='player_of_the_match',y='match_id')
plt.xticks(rotation=90)#kuldeep yadav has the higest amout of best player of the match, umar malik gets 2nd

top_bowelrers=df.groupby(['best_bowling_figure','top_scorer'])['won_by'].count().reset_index().sort_values(by='won_by',ascending=False)
print(top_bowelrers)
top_data=top_bowelrers.head(20)
sns.lineplot(data=top_data)

"""**QUESTION9**"""

df.describe()

"""1. there is no null vales in the data
2. ana there is no duplicates in the data
3.shape of the data is 74 x 20
4. count of numerical data is 7 ,so count of categorical is 13
5.baglour played mots of the matched and pudjab played the less number of matches
6.there are ouliers in first_ings_score,second_inng_score,marign and high score, margin has highest amount of outliers , usually bost plot is used for deticting outlietrs,z_score is alo used to find the outliers .when the z_score is >= 3 then it is deteted as an outlier

7.mean of margin is 19 and max is 91 this seems anomaly
8.pair plot is usee to fin all the corrrelation between mutple values in the data is used that to fin the relationship between all data
9.kuldeep yadav has the higest amout of best player of the match, umar malik gets 2nd

10.there is a postive correlation between second inning score and first inning
also between first_inning and high score

11. pune statidum has the hights margin



"""
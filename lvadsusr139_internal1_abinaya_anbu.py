# -*- coding: utf-8 -*-
"""LVADSUSR139_Internal1_Abinaya_Anbu.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qlYdDxX5pcoJUGIlQPChL_4TDe4h_ngT
"""

from mmap import ACCESS_READ
#1

l= float(input('enter the length in mts'))
w= float(input('enter the width in mts'))
area = l*w
print(area)
if area<100:
  print('small')
elif area<300:
  print('medium')
else:
  print('Large')

#2
weight= float(input('enter the weight in kgs'))
height= float(input('enter the height in meters'))
bmi=weight/(height**2)
print("bmi:",bmi)

if bmi<20:
  print('add protine to food, incerase food quantity')
elif bmi>30:
  print('reduce sugar and move your body')
else:
  print('good!, bmi is in line keep this up')

#3
student={
    "s1":[20,30,40,50,35],
    "s2":[20,30,40,50,35],
    "s3":[20,30,40,50,35],
}
marks=[]
def add(std_id,student,mark):
  if std_id in student.keys():
    student[std_id].append(mark)
  else:
    student[std_id]=mark
def update(std_id,student,mark):
   student[std_id]=mark
def retrive(std_id,student):
   student.items()
def records(std_id,student):
   student.get(std_id)

print(student.items())
choice=int(input('enter choice'))
print("system")
print("1.add")
print('2.update')
print('3.retrive')
print('4.get record based on student id')
if choice==1:
  std_id=int(input('enter student id'))
  for i in range(6):
    mark= int(input('enter mark'))
    marks.append(mark)
    add(std_id,student,mark)
if choice == 2:
  std_id=int(input('enter student id'))
  for i in range(6):
    mark= int(input('enter mark'))
    marks.append(mark)
    update(std_id,student,mark)
if choice ==3:
    std_id=int(input('enter student id'))
    retrive(std_id,student)
if choice==4:
    std_id=int(input('enter student id'))
    records(std_id,student)

#4
age= int(input('Enter the age'))
if age< 14:
  print('children')
elif age<18:
  print('teen')
elif age<60:
  print('adult')
else:
  print('senior')

#5
sub_id =[1,2,3,4,5,6,7,8,9,10]
even_id=[]
for i in sub_id:
  if i%2==0:
    even_id.append(i)

print("even id users for promotion",even_id)

#6
stored_pass='pass10'
password = input('enter a password')

if(stored_pass==password):
  print('can acccess the sensitive file')
else:
  print('cant open the file')

#7
cust_sat={
    "service1":[1,2,3,5,4.5],
    "service2":[1,2,3,5,4.5],
    "service3":[1,2,3,5,4.5]
}
cust_sat=[1,2,3,5,4.5]
avg=sum(cust_sat)/len(cust_sat)
print(avg)

def sat(avg):
  if avg<1:
    print('bad,Need improvment')
  elif avg<3:
    print('can do well')
  else:
    print('good rating')

print(sat(avg))

#8

commands=['good','bad','aeiou','thrth']

def vowel_count(commands):
  for com in commands:
    for i in com:
      count=i.count('a')+i.count('e')+i.count('o')+i.count('i')+i.count('u')
  return count

print(vowel_count(commands))

#9
import datetime

date = '20-04-2024'

#10

try:
  customer_id =input('enter customer id')
except:
  print('customer id should not be null')
try:
  name =input('enter the name')
except:
  print('name should  be an string')

#11
try:
  name = input('enter name')
  print('welcome !',name)

except:
    print('name should be string')
try:
    id = int(input('enter id'))
except:
  print('id should be an number')

#12
num1 = 1
num2 = 2
try:
   sum=num1+num2
   sub=num1-num2
   mul=num1*num2
   div=num1/num2
except ZeroDivisionError:
  print('ERROR: denominator should not be zero')

#13
log_file='/log_file'
daily_report='daily report'
with open(log_file,"r") as file:
  file.write('daily_report')
  content = log_file.read()
  print(content)

#14
file_path='/log_file'
with open(file_path,'r') as file:
  content = file.read()
  print(content)

#15
file_path='/log_file'
with open(file_path,'w') as file:
   content =file.write('message')
   print(content)


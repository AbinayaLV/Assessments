# -*- coding: utf-8 -*-
"""LVADSUSR139_Abinaya_Anbu_IA2.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1YAkVhEBbr0e3-a_FB6Us9H8RkXIfvWWG

**INERNAL ASSESSMENT 2**

**QUESTION1**
"""

import numpy as np
arr=np.array([1,2,3,4,5,6])
max=np.max(arr)
min = np.min(arr)
sum=np.sum(arr)
mean=np.mean(arr)
std=np.std(arr)
print("max",max)
print("min",min)
print("sum",sum)
print("mean",mean)
print("std",std)

"""
**QUESTION2**

"""

health_data = np.array([[160, 70, 30],   # height, weight, age for individual 1
                        [165, 65, 35],   # height, weight, age for individual 2
                        [170, 75, 40]])  # height, weight, age for individual 3

def noramlization(health_data):
  mean=np.mean(health_data)
  std=np.std(health_data)
  norm=(health_data-mean)/std
  return norm

print(noramlization(health_data))

"""**QUESTION3**"""

student_mark=np.array([[30,40,50,20,40],
                      [46,-1,58,45,90],
                      [23,45,67,-1,89],
                      [56,45,-1,78,87]],ndmin=2)
print(np.nanmean(student_mark[:,-3:],axis=0))

"""**QUESTION4**"""

sensor=np.linspace(15,25,24)
print(sensor)

"""**QUESTION5**"""

import numpy as np
import pandas as pd
daily_closing_prices = np.array([100, 102, 98, 105, 107, 110, 108, 112, 115, 118, 120])
window_size = 5
df=pd.DataFrame(daily_closing_prices)
df.rolling(window=window_size).mean()

"""**QUESTION6**"""

syn=np.arange(100).reshape(25,4)
print(syn)

"""**QUESTION7**"""

import numpy as np
properties_matrix = np.array([[1, 2, 3],
                              [4, 5, 6],
                              [7, 8, 9]])

det= np.linalg.det(properties_matrix)
print(det)

"""**QUESTION8**"""

t_arr=np.array([[1,2,3],[2,3,4],[4,5,6]])
b_arr=np.zeros([1,6],dtype=bool)
c=0
for i in range(4):
  for j in range(4):
    if(t_arr[i][j]>5):
      b_arr[c].append(True)
      c=c+1
    else:
      #b_arr[c].append(False)
      c=c+1

print(t_arr[b_arr])

"""**QUESTION9**"""

data = {'Name': ['Alice', 'Bob', 'Charlie', 'David', 'Eve', 'Frank', 'Grace'],
        'Age': [25, 30, 35, 40, 45, 50, 55],
        'City': ['New York', 'Los Angeles', 'Chicago', 'Houston', 'Phoenix', 'Miami', 'Boston'],
        'Department': ['HR', 'IT', 'Finance', 'Marketing', 'Sales', 'IT', 'HR']}

comp=pd.DataFrame(data)
filter_df = comp[(comp['Age']>45)&(comp['Department']!='HR')]
print(filter_df[['Name','City']])

"""**QUESTION10**"""

data = {'Department': ['Electronics', 'Electronics', 'Clothing', 'Clothing', 'Home Goods'],
        'Salesperson': ['Alice', 'Bob', 'Charlie', 'David', 'Eve'],
        'Sales': [70000, 50000, 30000, 40000, 60000]}

sales=pd.DataFrame(data)
avg_sal_person= sales.groupby(['Salesperson','Department']).mean('Sales')
avg_sales=sales['Sales'].mean()
rank=sales.sort_values(by=avg_sales,ascending=False)
print(rank)

"""**QUESTION11**"""

data = {
    'Product': ['Apples', 'Bananas', 'Cherries', 'Dates', 'Elderberries', 'Flour', 'Grapes'],
    'Category': ['Fruit', 'Fruit', 'Fruit', 'Fruit', 'Fruit', 'Bakery', 'Fruit'],
    'Price': [1.20, 0.50, 3.00, 2.50, 4.00, 1.50, 2.00],
    'Promotion': [True, False, True, True, False, True, False]
}

product=pd.DataFrame(data)
avg_frt=product[(product['Category']=='Fruit')]['Price'].mean()
filtered=product[(product['Category']=='Fruit')&(product['Price']>avg_frt)&(product['Promotion']==False)]
print(filtered)

"""**QUESTION12**"""

employee_data = {
    'Employee': ['Alice', 'Bob', 'Charlie', 'David'],
    'Department': ['HR', 'IT', 'Finance', 'IT'],
    'Manager': ['John', 'Rachel', 'Emily', 'Rachel']
}
project_data = {
    'Employee': ['Alice', 'Charlie', 'Eve'],
    'Project': ['P1', 'P3', 'P2']
}
df1=pd.DataFrame(employee_data)
df2=pd.DataFrame(project_data)
m_df=pd.merge(df1,df2,on='Employee',how='left')
print(m_df)

"""**QUESTION13**"""

sport=pd.read_csv('/content/sample_data/Q13_sports_team_stats.csv')
win_ratio=(sport['Wins'].sum())/(sport['GamesPlayed'].count())
avg_score=sport['Wins'].mean()

print(win_ratio)
print(avg_score)
print(sport)

"""**QUESTION14**"""

import datetime
customer=pd.read_csv('/content/sample_data/Q14_customer_purchases.csv')
customer[date]=pd.to_datetime(customer[date])
customer['LoyaltyProgramSignUp']=pd.to_datetime(customer['LoyaltyProgramSignUp'])
customer[cus_bef]=customer.groupby('CustomerID')[customer['Date']<customer['LoyaltyProgramSignUp']]['PurchaseAmount'].sum()
customer[cus_aft]=customer.groupby('CustomerID')[customer['Date']>customer['LoyaltyProgramSignUp']]['PurchaseAmount'].sum()
customer[improvement]=customer[cus_aft]-customer[cus_bef]
customer.sort_values(by='improvment')

"""**QUESTION15**"""

student=pd.read_csv('/content/sample_data/Q15_student_grades.csv')
student_df=student.groupby(['Subject','StudentID'])['Grade'].mean()
print(student_df)